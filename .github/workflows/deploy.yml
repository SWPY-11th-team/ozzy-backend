name: Auto deploy to NCP
run-name: Running
on:
  push:
    branches:
      - main
      - feature/build-test

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # 체크아웃 및 JDK 세팅
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ github.ref }}

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      # YML 파일 생성
      - name: Setting secret
        run: |
          mkdir -p src/main/resources
          echo "${{ secrets.SECRET_YML }}" > ./src/main/resources/application.yml
          find src
        shell: bash

      # Gradle 권한 부여
      - name: Grant permission for gradlew
        run: chmod +x ./gradlew

      # 테스트 및 빌드
      - name: Build with Gradle
        run: ./gradlew clean build

      - name: Login to Docker hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      #빌드한 jar 파일을 도커 이미지로 빌드하고 도커 허브에 푸시
      - name: docker build and push
        run: |
          docker build --no-cache -t ${{ secrets.DOCKER_REPO }}:test .
          docker push ${{ secrets.DOCKER_REPO }}:test

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: NCP login and docker image pull and run
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.NCP_HOST }}
          username: ${{ secrets.NCP_USERNAME }}
          password: ${{ secrets.NCP_PASSWORD }}
          port: ${{ secrets.NCP_PORT }}
          script: |
            echo ${{ secrets.DOCKERHUB_TOKEN }} | sudo docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
            sudo docker stop $(sudo docker ps -a -q)
            sudo docker rm -f $(sudo docker ps -a -q)
            sudo docker pull ${{ secrets.DOCKER_REPO }}:test
            sudo docker run -d -p 80:443 --name ozzy ${{ secrets.DOCKER_REPO }}:test
            sudo docker image prune -f
            ps -ef
